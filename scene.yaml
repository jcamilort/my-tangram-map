cameras:
    camera1:
        type: perspective

lights:
    light1:
        type: directional
        direction: [0, 1, -.5]
        diffuse: .3
        ambient: 1
    light2:
        visible: false
        type: point
        position: [4.60284,-74.0671411, 100]
        origin: world
        ambient: .2
        diffuse: 1
        specular: .2

sources:
    osm:
        type: TopoJSON
        url:  https://vector.mapzen.com/osm/all/{z}/{x}/{y}.topojson?api_key=vector-tiles-jQZ2PgC
        max_zoom: 16

layers:
    earth:
        data: { source: osm }
        draw:
            polygons:
                order: function() { return feature.sort_key; }
                color: '#ddeeee'

    landuse:
        data: { source: osm }
        draw:
            polygons:
                order: function() { return feature.sort_key; }
                color: '#aaffaa'

    water:
        data: { source: osm }
        draw:
            polygons:
                order: function() { return feature.sort_key; }
                color: '#003366'

    roads:
        data: { source: osm }
        filter:
            not: { kind: ["path", "rail"] }
        draw:
            lines:
                order: function() { return feature.sort_key; }
                color: gray
                width: 8
                cap: round
        highway:
            filter:
                kind: highway
            draw:
                lines:
                    order: function() { return feature.sort_key; }
                    color: '#cc6666'
                    width: 12
                    outline:
                        color: grey
                        width: 1.5
        minor_road:
            filter:
                kind: minor_road
            draw:
                lines:
                    order: function() { return feature.sort_key; }
                    color: lightgrey
                    width: 5
    
    building-labels:
        data: {source: osm, layer: buildings}
        filter:
            all: 
                - { $zoom: {min: 16}}
                - $geometry: point
                - not: { location: underground}
                - kind: [false, building, university, college, school, kindergarten]
            any:
                - { $zoom: [16], area: { min: 5000 }, name: true }
                - { $zoom: [16], area: { min: 5000 }, kind: true }
                - { $zoom: [16], area: { min: 10000 }, landuse_kind: true }
                - { $zoom: [16], area: { min: 7000 }, kind: [university, college, school, kindergarten] }
                - { $zoom: [16], volume: { min: 50000 }, name: true }
                - { $zoom: [17], area: { min: 3000 }, name: true }
                - { $zoom: [17], area: { min: 2000 }, kind: [university, college, school, kindergarten] }
                - { $zoom: [18], area: { min: 1000 }, name: true }
                - { $zoom: [18], kind: [university, college, school, kindergarten] }
                - { $zoom: [19], area: { min: 200 }, name: true }
                - { $zoom: { min: 19 }, kind: [university, college, school, kindergarten] }
                - { $zoom: { min: 20 }, name: true }
                
        draw:
            text-blend-order:
                interactive: true
                move_into_tile: true
                priority: 51
                visible: *text_visible_building
                order: 7
                font:
                    fill: *text_fill
                    family: *text_font_family
                    style: italic
                    size: 11px
                    stroke: { color: *text_stroke_address, width: 1 }


    buildings:
        data: { source: osm }
        draw:
            polygons:
                order: function() { return feature.sort_key; }
                color: |
                    function () {
                        var h = feature.height || 20;
                        h = Math.min((h + 50)/ 255, .8); // max brightness: .8
                        h = Math.max(h, .4); // min brightness: .4
                        return [h, h, h];
                    }
        3d-buildings:
            filter: { $zoom: { min: 15 } }
            draw:
                polygons:
                    extrude: function () { return feature.height > 20 || $zoom >= 16; }
